[{"/Users/s2200128/Desktop/fullstackopen/part7/routed-anecdotes/src/index.js":"1","/Users/s2200128/Desktop/fullstackopen/part7/routed-anecdotes/src/App.js":"2","/Users/s2200128/Desktop/fullstackopen/part7/routed-anecdotes/src/hooks/index.js":"3"},{"size":253,"mtime":1661930565157,"results":"4","hashOfConfig":"5"},{"size":5071,"mtime":1661938704394,"results":"6","hashOfConfig":"5"},{"size":365,"mtime":1661938466740,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},"1vaw4uq",{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},"/Users/s2200128/Desktop/fullstackopen/part7/routed-anecdotes/src/index.js",[],[],[],"/Users/s2200128/Desktop/fullstackopen/part7/routed-anecdotes/src/App.js",["19","20","21"],[],"import { useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link,\n  useParams,\n  useNavigate,\n  useMatch,\n} from \"react-router-dom\";\n// import custom hook useField\nimport { useField } from \"./hooks\";\n\nconst Menu = () => {\n  const padding = {\n    paddingRight: 5,\n  };\n  return (\n    <div>\n      <Link to=\"/\" style={padding}>\n        anecdotes\n      </Link>\n      <Link to=\"/create\" style={padding}>\n        create new\n      </Link>\n      <Link to=\"/about\" style={padding}>\n        about\n      </Link>\n    </div>\n  );\n};\n\nconst AnecdoteList = ({ anecdotes }) => (\n  <div>\n    <h2>Anecdotes</h2>\n    <ul>\n      {anecdotes.map((anecdote) => (\n        <li key={anecdote.id}>\n          <Link to={`/anecdotes/${anecdote.id}`}>{anecdote.content}</Link>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nconst Anecdote = ({ anecdote }) => {\n  console.log(\"ANECDOTE: \", anecdote);\n  return (\n    <div>\n      <h2>{anecdote.content}</h2>\n      <h3>{anecdote.author}</h3>\n      <div>has {anecdote.votes} votes</div>\n      <div>\n        For more info visit: <a href={`${anecdote.info}`}>{anecdote.info}</a>\n      </div>\n    </div>\n  );\n};\n\nconst About = () => (\n  <div>\n    <h2>About anecdote app</h2>\n    <p>According to Wikipedia:</p>\n\n    <em>\n      An anecdote is a brief, revealing account of an individual person or an\n      incident. Occasionally humorous, anecdotes differ from jokes because their\n      primary purpose is not simply to provoke laughter but to reveal a truth\n      more general than the brief tale itself, such as to characterize a person\n      by delineating a specific quirk or trait, to communicate an abstract idea\n      about a person, place, or thing through the concrete details of a short\n      narrative. An anecdote is \"a story with a point.\"\n    </em>\n\n    <p>\n      Software engineering is full of excellent anecdotes, at this app you can\n      find the best and add more.\n    </p>\n  </div>\n);\n\nconst Footer = () => (\n  <div>\n    Anecdote app for <a href=\"https://fullstackopen.com/\">Full Stack Open</a>.\n    See{\" \"}\n    <a href=\"https://github.com/fullstack-hy2020/routed-anecdotes/blob/master/src/App.js\">\n      https://github.com/fullstack-hy2020/routed-anecdotes/blob/master/src/App.js\n    </a>{\" \"}\n    for the source code.\n  </div>\n);\n\nconst CreateNew = (props) => {\n  const content = useField(\"text\");\n  const author = useField(\"text\");\n  const info = useField(\"text\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    props.addNew({\n      content: content.value,\n      author: author.value,\n      info: info.value,\n      votes: 0,\n    });\n  };\n\n  const handleReset = (e) => {\n    content.onReset();\n    author.onReset();\n    info.onReset();\n  };\n  return (\n    <div>\n      <h2>create a new anecdote</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          content\n          <input {...content} />\n        </div>\n        <div>\n          author\n          <input {...author} />\n        </div>\n        <div>\n          url for more info\n          <input {...info} />\n        </div>\n        <button>create</button>\n        <button type=\"button\" onClick={handleReset}>\n          reset\n        </button>\n      </form>\n    </div>\n  );\n};\n\nconst App = () => {\n  const navigate = useNavigate();\n\n  const [anecdotes, setAnecdotes] = useState([\n    {\n      content: \"If it hurts, do it more often\",\n      author: \"Jez Humble\",\n      info: \"https://martinfowler.com/bliki/FrequencyReducesDifficulty.html\",\n      votes: 0,\n      id: 1,\n    },\n    {\n      content: \"Premature optimization is the root of all evil\",\n      author: \"Donald Knuth\",\n      info: \"http://wiki.c2.com/?PrematureOptimization\",\n      votes: 0,\n      id: 2,\n    },\n  ]);\n\n  const match = useMatch(\"/anecdotes/:id\");\n  const anecdote = match\n    ? anecdotes.find((anecdote) => anecdote.id === Number(match.params.id))\n    : null;\n  const [notification, setNotification] = useState(\"\");\n\n  const addNew = (anecdote) => {\n    anecdote.id = Math.round(Math.random() * 10000);\n    setAnecdotes(anecdotes.concat(anecdote));\n    navigate(\"/\");\n    setNotification(`A new anecdote ${anecdote.content} created`);\n    setTimeout(() => {\n      setNotification(\"\");\n    }, 5000);\n  };\n\n  const anecdoteById = (id) => anecdotes.find((a) => a.id === id);\n\n  const vote = (id) => {\n    const anecdote = anecdoteById(id);\n\n    const voted = {\n      ...anecdote,\n      votes: anecdote.votes + 1,\n    };\n\n    setAnecdotes(anecdotes.map((a) => (a.id === id ? voted : a)));\n  };\n\n  return (\n    <div>\n      <h1>Software anecdotes</h1>\n      <Menu />\n      {notification}\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            <AnecdoteList anecdotes={anecdotes} notification={notification} />\n          }\n        />\n        <Route path=\"/create\" element={<CreateNew addNew={addNew} />} />\n        <Route path=\"/about\" element={<About />} />\n        <Route\n          path=\"/anecdotes/:id\"\n          element={<Anecdote anecdote={anecdote} />}\n        />\n      </Routes>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","/Users/s2200128/Desktop/fullstackopen/part7/routed-anecdotes/src/hooks/index.js",[],[],{"ruleId":"22","severity":1,"message":"23","line":3,"column":20,"nodeType":"24","messageId":"25","endLine":3,"endColumn":26},{"ruleId":"22","severity":1,"message":"26","line":7,"column":3,"nodeType":"24","messageId":"25","endLine":7,"endColumn":12},{"ruleId":"22","severity":1,"message":"27","line":177,"column":9,"nodeType":"24","messageId":"25","endLine":177,"endColumn":13},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'useParams' is defined but never used.","'vote' is assigned a value but never used."]